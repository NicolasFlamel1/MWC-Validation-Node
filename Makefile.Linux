# Program parameters
NAME = "MWC Validation Node"
VERSION = "0.0.1"
CC = "g++"
STRIP = "strip"
CFLAGS = -D PRUNE_RANGEPROOFS -I "blake2/include" -I "./secp256k1-zkp/dist/include" -I "./zlib/dist/include" -I "./libzip/dist/include" -I "./croaring/dist/include" -static-libstdc++ -static-libgcc -O3 -Wall -std=c++2a -finput-charset=UTF-8 -fexec-charset=UTF-8 -funsigned-char -ffunction-sections -fdata-sections -D PROGRAM_NAME=$(NAME) -D PROGRAM_VERSION=$(VERSION)
LIBS = -L "./secp256k1-zkp/dist/lib" -Wl,-Bstatic -lsecp256k1 -Wl,-Bdynamic -L "./libzip/dist/lib" -Wl,-Bstatic -lzip -Wl,-Bdynamic -L "./zlib/dist/lib" -Wl,-Bstatic -lz -Wl,-Bdynamic -L "./croaring/dist/lib" -Wl,-Bstatic -lroaring -Wl,-Bdynamic -lpthread
SRCS = "./blake2/include/blake2b-ref.c" "./block.cpp" "./consensus.cpp" "./common.cpp" "./crypto.cpp" "./header.cpp" "./input.cpp" "./kernel.cpp" "./main.cpp" "./message.cpp" "./node.cpp" "./output.cpp" "./peer.cpp" "./proof_of_work.cpp" "./rangeproof.cpp" "./saturate_math.cpp"
PROGRAM_NAME = $(subst $\",,$(NAME))

# Make
all:
	$(CC) $(CFLAGS) -o "./$(PROGRAM_NAME)" $(SRCS) $(LIBS)
	$(STRIP) "./$(PROGRAM_NAME)"
	
# Make clean
clean:
	rm -rf "./$(PROGRAM_NAME)" "./master.zip" "./BLAKE2-master" "./blake2" "./secp256k1-zkp-master" "./secp256k1-zkp" "./v1.2.12.zip" "./zlib-1.2.12" "./zlib" "./v1.9.0.zip" "./libzip-1.9.0" "./libzip" "./v0.5.0.zip" "./CRoaring-0.5.0" "./croaring"

# Make run
run:
	"./$(PROGRAM_NAME)"

# Make dependencies
dependencies:
	
	# BLAKE2
	wget "https://github.com/BLAKE2/BLAKE2/archive/master.zip"
	unzip "./master.zip"
	rm "./master.zip"
	mv "./BLAKE2-master" "./blake2"
	mv "./blake2/ref" "./blake2/include"
	
	# Secp256k1-zkp
	wget "https://github.com/mimblewimble/secp256k1-zkp/archive/master.zip"
	unzip "./master.zip"
	rm "./master.zip"
	mv "./secp256k1-zkp-master" "./secp256k1-zkp"
	cd "./secp256k1-zkp" && "./autogen.sh" && "./configure" --prefix="$(CURDIR)/secp256k1-zkp/dist" --enable-endomorphism --enable-experimental --enable-module-generator --enable-module-commitment --enable-module-rangeproof --enable-module-bulletproof --enable-module-aggsig --disable-shared --disable-tests --disable-benchmark && make && make install
	
	# Zlib
	wget "https://github.com/madler/zlib/archive/refs/tags/v1.2.12.zip"
	unzip "./v1.2.12.zip"
	rm "./v1.2.12.zip"
	mv "./zlib-1.2.12" "./zlib"
	cd "./zlib" && "./configure" --prefix="$(CURDIR)/zlib/dist" && make && make install
	
	# Libzip
	wget "https://github.com/nih-at/libzip/archive/refs/tags/v1.9.0.zip"
	unzip "./v1.9.0.zip"
	rm "./v1.9.0.zip"
	mv "./libzip-1.9.0" "./libzip"
	cd "./libzip" && cmake -DCMAKE_INSTALL_PREFIX="$(CURDIR)/libzip/dist" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DZLIB_INCLUDE_DIR="../zlib/dist/include" -DZLIB_LIBRARY="../zlib/dist/lib" -DENABLE_BZIP2=OFF -DENABLE_LZMA=OFF -DENABLE_OPENSSL=OFF -DENABLE_WINDOWS_CRYPTO=OFF -DBUILD_TOOLS=OFF -DBUILD_REGRESS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DOC=OFF "./CMakeLists.txt" && make && make install
	
	# CRoaring
	wget "https://github.com/RoaringBitmap/CRoaring/archive/refs/tags/v0.5.0.zip"
	unzip "./v0.5.0.zip"
	rm "./v0.5.0.zip"
	mv "./CRoaring-0.5.0" "./croaring"
	cd "./croaring" && cmake -DCMAKE_INSTALL_PREFIX="$(CURDIR)/croaring/dist" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DENABLE_ROARING_TESTS=OFF "./CMakeLists.txt" && make && make install
